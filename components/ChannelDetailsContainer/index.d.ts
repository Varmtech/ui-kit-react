/// <reference types="react" />
export interface IDetailsProps {
    channelEditIcon?: JSX.Element;
    editChannelSaveButtonBackgroundColor?: string;
    editChannelSaveButtonTextColor?: string;
    editChannelCancelButtonBackgroundColor?: string;
    editChannelCancelButtonTextColor?: string;
    showMuteUnmuteNotifications?: boolean;
    muteUnmuteNotificationsOrder?: number;
    muteNotificationIcon?: JSX.Element;
    unmuteNotificationIcon?: JSX.Element;
    muteNotificationIconColor?: string;
    unmuteNotificationIconColor?: string;
    muteUnmuteNotificationSwitcherColor?: string;
    muteUnmuteNotificationTextColor?: string;
    showStarredMessages?: boolean;
    starredMessagesOrder?: number;
    staredMessagesIcon?: JSX.Element;
    staredMessagesIconColor?: string;
    staredMessagesTextColor?: string;
    showPinChannel?: boolean;
    pinChannelOrder?: number;
    pinChannelIcon?: JSX.Element;
    pinChannelIconColor?: string;
    pinChannelTextColor?: string;
    showMarkAsReadUnread?: boolean;
    markAsReadUnreadOrder?: number;
    markAsReadIcon?: JSX.Element;
    markAsUnreadIcon?: JSX.Element;
    markAsReadIconColor?: string;
    markAsUnreadIconColor?: string;
    markAsReadUnreadTextColor?: string;
    showLeaveChannel?: boolean;
    leaveChannelOrder?: number;
    leaveChannelIcon?: JSX.Element;
    leaveChannelIconColor?: string;
    leaveChannelTextColor?: string;
    showReportChannel?: boolean;
    reportChannelOrder?: number;
    reportChannelIcon?: JSX.Element;
    reportChannelIconColor?: string;
    reportChannelTextColor?: string;
    showDeleteChannel?: boolean;
    deleteChannelOrder?: number;
    deleteChannelIcon?: JSX.Element;
    deleteChannelIconColor?: string;
    deleteChannelTextColor?: string;
    showBlockAndLeaveChannel?: boolean;
    blockAndLeaveChannelIcon?: JSX.Element;
    blockAndLeaveChannelIconColor?: string;
    blockAndLeaveChannelTextColor?: string;
    unblockUserIcon?: JSX.Element;
    linkPreviewIcon?: JSX.Element;
    linkPreviewHoverIcon?: JSX.Element;
    linkPreviewTitleColor?: string;
    linkPreviewColor?: string;
    linkPreviewHoverBackgroundColor?: string;
    voicePreviewIcon?: JSX.Element;
    voicePreviewHoverIcon?: JSX.Element;
    voicePreviewTitleColor?: string;
    voicePreviewDateAndTimeColor?: string;
    voicePreviewHoverBackgroundColor?: string;
    filePreviewIcon?: JSX.Element;
    filePreviewHoverIcon?: JSX.Element;
    filePreviewTitleColor?: string;
    filePreviewSizeColor?: string;
    filePreviewHoverBackgroundColor?: string;
    filePreviewDownloadIcon?: JSX.Element;
}
declare const ChannelDetailsContainer: ({ channelEditIcon, editChannelSaveButtonBackgroundColor, editChannelSaveButtonTextColor, editChannelCancelButtonBackgroundColor, editChannelCancelButtonTextColor, showMuteUnmuteNotifications, muteUnmuteNotificationsOrder, muteNotificationIcon, unmuteNotificationIcon, muteNotificationIconColor, unmuteNotificationIconColor, muteUnmuteNotificationSwitcherColor, muteUnmuteNotificationTextColor, showStarredMessages, starredMessagesOrder, staredMessagesIcon, staredMessagesIconColor, staredMessagesTextColor, showPinChannel, pinChannelOrder, pinChannelIcon, pinChannelIconColor, pinChannelTextColor, showMarkAsReadUnread, markAsReadUnreadOrder, markAsReadIcon, markAsUnreadIcon, markAsReadIconColor, markAsUnreadIconColor, markAsReadUnreadTextColor, showLeaveChannel, leaveChannelOrder, leaveChannelIcon, leaveChannelIconColor, leaveChannelTextColor, showReportChannel, reportChannelIcon, reportChannelOrder, reportChannelIconColor, reportChannelTextColor, deleteChannelIcon, deleteChannelIconColor, deleteChannelTextColor, showBlockAndLeaveChannel, blockAndLeaveChannelIcon, blockAndLeaveChannelIconColor, blockAndLeaveChannelTextColor, unblockUserIcon, linkPreviewIcon, linkPreviewHoverIcon, linkPreviewTitleColor, linkPreviewColor, linkPreviewHoverBackgroundColor, filePreviewIcon, filePreviewHoverIcon, filePreviewTitleColor, filePreviewSizeColor, filePreviewHoverBackgroundColor, filePreviewDownloadIcon }: IDetailsProps) => JSX.Element;
export default ChannelDetailsContainer;
